# Generated by Django 5.2 on 2025-04-25 16:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('website_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('detail', models.TextField(blank=True)),
                ('number_of_matches', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map', models.CharField(choices=[('erangel', 'Erangel'), ('miramar', 'Miramar'), ('sanhok', 'Sanhok'), ('vikendi', 'Vikendi')], max_length=50)),
                ('live_link', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('ongoing', 'Ongoing'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tournament.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('kill_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('bonus_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_points', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('rank', models.IntegerField()),
                ('wwcd', models.BooleanField(default=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='tournament.match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='tournament.team')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('jersey_number', models.PositiveIntegerField(blank=True, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='tournament.team')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=255)),
                ('prize_pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed')], default='upcoming', max_length=20)),
                ('rules', models.TextField(blank=True)),
                ('website_link', models.URLField(blank=True)),
                ('twitter_link', models.URLField(blank=True)),
                ('twitch_link', models.URLField(blank=True)),
                ('youtube_link', models.URLField(blank=True)),
                ('discord_link', models.URLField(blank=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='tournament.game')),
                ('organiser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_tournaments', to='tournament.organizer')),
                ('teams', models.ManyToManyField(blank=True, related_name='tournaments', to='tournament.team')),
            ],
        ),
        migrations.AddField(
            model_name='schedule',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='tournament.tournament'),
        ),
        migrations.CreateModel(
            name='OverallStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(blank=True, max_length=50)),
                ('total_matches', models.IntegerField(default=0)),
                ('position_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('kill_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('bonus_points', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_points', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('wwcd_count', models.IntegerField(default=0)),
                ('penalties', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('final_rank', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_standings', to='tournament.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_standings', to='tournament.tournament')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tournament.tournament'),
        ),
    ]
